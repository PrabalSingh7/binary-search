74. Search a 2D Matrix
Medium
11.7K
341
Companies
You are given an m x n integer matrix matrix with the following two properties:

Each row is sorted in non-decreasing order.
The first integer of each row is greater than the last integer of the previous row.
Given an integer target, return true if target is in matrix or false otherwise.

You must write a solution in O(log(m * n)) time complexity.

 

Example 1:


Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3
Output: true
Example 2:


Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13
Output: false
 

Constraints:

m == matrix.length
n == matrix[i].length
1 <= m, n <= 100
-104 <= matrix[i][j], target <= 104
Accepted
1.2M
Submissions
2.5M
Acceptance Rate
47.6%


class Solution {
public:
    //viewing 2D matrix as 1D array :)

    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        int m = matrix[0].size();

        int l = 0;
        int h = n*m - 1;

        while(l<=h) {
            int ci = (h+l) / 2;
            int mr = ci/m;
            int mc = ci%m;
            int val = matrix[mr][mc];

            if(val==target)
                return true;
            else if(val > target)   {
                h = ci - 1;
            }
            else {
                l = ci + 1;
            }
        }

        return false;
    }
};