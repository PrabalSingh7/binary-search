611. Valid Triangle Number
Medium
3.6K
196
Companies
Given an integer array nums, return the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.

 

Example 1:

Input: nums = [2,2,3,4]
Output: 3
Explanation: Valid combinations are: 
2,3,4 (using the first 2)
2,3,4 (using the second 2)
2,2,3
Example 2:

Input: nums = [4,2,3,4]
Output: 4
 

Constraints:

1 <= nums.length <= 1000
0 <= nums[i] <= 1000
Accepted
176.2K
Submissions
347.4K
Acceptance Rate
50.7%




class Solution {
public:
    int fun(vector<int>& nums, int tar) {
        int l = 0;
        int h = nums.size()-1;
        int idx = -1;

        while(l <= h)   {
            int mid = l + (h-l)/2; 

            if(nums[mid] < tar) {
                l = mid + 1;
                idx = max(idx, mid);
            }
            else    
                h = mid - 1;
        }

        return idx;
    }

    int triangleNumber(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int n = nums.size();
        int res = 0;

        for(int i=0; i<n-2; i++)  {
            for(int j=i+1; j<n-1; j++)    {
                int tar = nums[i] + nums[j]; 
                int lb = fun(nums,tar); 

                res += ( lb > j ) ? (lb - j) : 0;
            }
        }

        return res;
    }
};